version: "3"
services:
  zookeeper:
    image: 'bitnami/zookeeper:3.8'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:3.4'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=EXTERNAL://:9092,CLIENT://:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=EXTERNAL://localhost:9092,CLIENT://kafka:29092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=no
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami/kafka
  ksqldb:
    image: 'confluentinc/ksqldb-server:0.28.2'
    ports:
      - '8088:8088'
    volumes:
      - './sql:/etc/sql:ro'
    environment:
      - KSQL_BOOTSTRAP_SERVERS=kafka:29092
      - KSQL_LISTENERS=http://0.0.0.0:8088/
      - KSQL_KSQL_SERVICE_ID=ksql_service_2_
      - KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE=true
      - KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE=true
      - KSQL_KSQL_SCHEMA_REGISTRY_URL=http://schema-registry:8081
  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    depends_on:
      - zookeeper
      - kafka
    environment:
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181


volumes:
  kafka_data: